{
  "hash": "7b400ce44928660b3513ebb9acf6b099",
  "result": {
    "engine": "jupyter",
    "markdown": "---\n# toc: true\n# listing:\n#   - id: hobbies-listing\n#     contents:\n#       - \"/hobbies/*.qmd\"\n#     sort: false\n#     sort-ui: false\n#     filter-ui: true\n#     type: grid\n#     # fields:\n#     #   - title\n#     categories: false\ntitle: Southern California Tidepool Photography\nlightbox: true\n# format: html\n# runtime: shiny\n# output: html_document\n# format: \n#   dashboard:\n#     orientation: columns\n#     theme: cosmo\n---\n\n\n\n\n::: {style=\"display: grid;grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));grid-gap: 1em;\"}\n\n\n\n\n```{lua}\nlist_images_from_folder(\"hobbies/tidepooling_photos\")\n\n```\n\n\n\n:::\n\nEverything was taken with an Olympus TG-7 with flash diffuser attachement. \n\n::: {style=\"display: grid;grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));grid-gap: 1em;\"}\n\n![](hobbies/tidepooling_photos/crab.jpg){group=\"my-gallery\"}\n\n![](hobbies/tidepooling_photos/P1111162.jpg){group=\"my-gallery\"}\n\n![](hobbies/tidepooling_photos/P1111177.jpg){group=\"my-gallery\"}\n\n![](hobbies/tidepooling_photos/P1111178.jpg){group=\"my-gallery\"}\n\n![](hobbies/tidepooling_photos/P1111183-2.jpg){group=\"my-gallery\"}\n\n![](hobbies/tidepooling_photos/P1111189.jpg){group=\"my-gallery\"}\n\n![](hobbies/tidepooling_photos/P1111190.jpg){group=\"my-gallery\"}\n\n![](hobbies/tidepooling_photos/P1111194.jpg){group=\"my-gallery\"}\n\n![](hobbies/tidepooling_photos/PC010471.jpg){group=\"my-gallery\"}\n![](hobbies/tidepooling_photos/PC010487.jpg){group=\"my-gallery\"}\n![](hobbies/tidepooling_photos/PC010496.jpg){group=\"my-gallery\"}\n![](hobbies/tidepooling_photos/PC010471.jpg){group=\"my-gallery\"}\n:::\n\n<!-- ```{r} -->\n<!-- library(shiny) -->\n<!-- library(tidyverse) -->\n<!-- library(httr2) -->\n<!-- library(sf) -->\n<!-- library(leaflet) -->\n<!-- library(gt) -->\n<!-- ``` -->\n\n<!-- ```{r} -->\n<!-- # Example dataset with California tidepool locations, images, and descriptions -->\n<!-- photo_data <- tibble( -->\n<!--   location = c(\"Fitzgerald Marine Reserve\", \"Crystal Cove State Park\", \"La Jolla Tide Pools\"), -->\n<!--   lat = c(37.5028, 33.5722, 32.8493), -->\n<!--   lon = c(-122.4871, -117.8479, -117.2707), -->\n<!--   image_url = c(\"https://example.com/fitzgerald.jpg\",  -->\n<!--                 \"https://example.com/crystalcove.jpg\",  -->\n<!--                 \"https://example.com/lajolla.jpg\"), -->\n<!--   description = c(\"Home to sea stars, anemones, and crabs!\",  -->\n<!--                   \"A great place to spot octopuses and nudibranchs!\",  -->\n<!--                   \"Tidepools teeming with marine life and stunning views!\") -->\n<!-- ) -->\n\n<!-- ``` -->\n\n\n<!-- ```{r} -->\n<!-- # Shiny UI -->\n<!-- ui <- fluidPage( -->\n<!--   titlePanel(\"California Tidepooling Map\"), -->\n<!--   sidebarLayout( -->\n<!--     sidebarPanel( -->\n<!--       uiOutput(\"photo_display\"), -->\n<!--       textOutput(\"photo_description\") -->\n<!--     ), -->\n<!--     mainPanel( -->\n<!--       leafletOutput(\"map\") -->\n<!--     ) -->\n<!--   ) -->\n<!-- ) -->\n\n<!-- # Shiny Server -->\n<!-- server <- function(input, output, session) { -->\n<!--   # Create the interactive map -->\n<!--   output$map <- renderLeaflet({ -->\n<!--     leaflet(photo_data) |>  -->\n<!--       addTiles() |>  -->\n<!--       addCircleMarkers( -->\n<!--         lng = ~lon, lat = ~lat, -->\n<!--         color = \"blue\", -->\n<!--         popup = ~location, -->\n<!--         layerId = ~location -->\n<!--       ) -->\n<!--   }) -->\n\n<!--   # Update photo and description on map click -->\n<!--   observeEvent(input$map_marker_click, { -->\n<!--     clicked_location <- input$map_marker_click$id -->\n<!--     selected_photo <- photo_data |> filter(location == clicked_location) -->\n\n<!--     if (nrow(selected_photo) > 0) { -->\n<!--       output$photo_display <- renderUI({ -->\n<!--         tags$img(src = selected_photo$image_url, width = \"100%\") -->\n<!--       }) -->\n<!--       output$photo_description <- renderText({ -->\n<!--         selected_photo$description -->\n<!--       }) -->\n<!--     } -->\n<!--   }) -->\n<!-- } -->\n\n<!-- # Run the app -->\n<!-- shinyApp(ui, server) -->\n<!-- ``` -->\n\n",
    "supporting": [
      "hobbies_files\\figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}